{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { getLawaById } from '../api';\n// import { Container, Button } from 'react-bootstrap';\n// import L from 'leaflet';\n// import 'leaflet/dist/leaflet.css';\n\n// const LawaDetail = ({ language, darkMode }) => {\n//     const { id } = useParams();\n//     const [lawa, setLawa] = useState(null);\n\n//     useEffect(() => {\n//         getLawaById(id).then(setLawa);\n//     }, [id]);\n\n//     useEffect(() => {\n//         if (lawa && lawa.latitude && lawa.longitude) {\n//             const map = L.map('map').setView([lawa.latitude, lawa.longitude], 16);\n//             L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n//             L.marker([lawa.latitude, lawa.longitude]).addTo(map)\n//                 .bindPopup(`<b>${lawa.nama}</b>`).openPopup();\n//         }\n//     }, [lawa]);\n\n//     if (!lawa) return <p>Loading...</p>;\n\n//     return (\n//         <Container className={`mt-5 pt-5 ${darkMode ? 'dark-mode' : ''}`}>\n//             <h2>{lawa.nama}</h2>\n//             <img src={`/images/${lawa.gambar}`} alt={lawa.nama} className=\"img-fluid rounded mb-3\" />\n//             <p>{language === 'id' ? lawa.deskripsi_id : lawa.deskripsi_en}</p>\n//             <Button\n//                 variant=\"primary\"\n//                 onClick={() => window.open(`https://www.google.com/maps/dir/?api=1&destination=${lawa.latitude},${lawa.longitude}`, '_blank')}\n//             >\n//                 {language === 'id' ? 'Pergi Sekarang' : 'Go Now'}\n//             </Button>\n//             <div id=\"map\" style={{ height: \"400px\", width: \"100%\", marginTop: \"20px\" }}></div>\n//         </Container>\n//     );\n// };\n\n// export default LawaDetail;","map":{"version":3,"names":[],"sources":["C:/Users/62878/OneDrive/Desktop/wisata-buton/client/src/pages/LawaDetail.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { getLawaById } from '../api';\r\n// import { Container, Button } from 'react-bootstrap';\r\n// import L from 'leaflet';\r\n// import 'leaflet/dist/leaflet.css';\r\n\r\n// const LawaDetail = ({ language, darkMode }) => {\r\n//     const { id } = useParams();\r\n//     const [lawa, setLawa] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         getLawaById(id).then(setLawa);\r\n//     }, [id]);\r\n\r\n//     useEffect(() => {\r\n//         if (lawa && lawa.latitude && lawa.longitude) {\r\n//             const map = L.map('map').setView([lawa.latitude, lawa.longitude], 16);\r\n//             L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n//             L.marker([lawa.latitude, lawa.longitude]).addTo(map)\r\n//                 .bindPopup(`<b>${lawa.nama}</b>`).openPopup();\r\n//         }\r\n//     }, [lawa]);\r\n\r\n//     if (!lawa) return <p>Loading...</p>;\r\n\r\n//     return (\r\n//         <Container className={`mt-5 pt-5 ${darkMode ? 'dark-mode' : ''}`}>\r\n//             <h2>{lawa.nama}</h2>\r\n//             <img src={`/images/${lawa.gambar}`} alt={lawa.nama} className=\"img-fluid rounded mb-3\" />\r\n//             <p>{language === 'id' ? lawa.deskripsi_id : lawa.deskripsi_en}</p>\r\n//             <Button\r\n//                 variant=\"primary\"\r\n//                 onClick={() => window.open(`https://www.google.com/maps/dir/?api=1&destination=${lawa.latitude},${lawa.longitude}`, '_blank')}\r\n//             >\r\n//                 {language === 'id' ? 'Pergi Sekarang' : 'Go Now'}\r\n//             </Button>\r\n//             <div id=\"map\" style={{ height: \"400px\", width: \"100%\", marginTop: \"20px\" }}></div>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default LawaDetail;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}